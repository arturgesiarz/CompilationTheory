
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSErightMULASSIGNDIVASSIGNSUBASSIGNADDASSIGNnonassocLTGTGELEEQNEleft+-leftDOTADDDOTSUBleft*/leftDOTMULDOTDIVrightUMINUSleft\'ADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GE GT ID IF INTNUM LE LT MULASSIGN NE ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instructions_optinstructions_opt : instructions instructions_opt : instructions : instructions instruction instructions : instruction instruction : sys_instruction \';\'\n                   | assignment \';\'\n                   | \'{\' instructions \'}\' sys_instruction : RETURN expression sys_instruction : BREAK sys_instruction : CONTINUEsys_instruction : PRINT print_values instruction : IF \'(\' condition \')\' instruction %prec IFX instruction : IF \'(\' condition \')\' instruction ELSE instruction instruction : FOR var \'=\' expression \':\' expression instruction instruction : WHILE \'(\' condition \')\' instruction assignment : var assignment_operator expression\n                  | matrix_element assignment_operator expression\n                  | vector_element assignment_operator expression assignment_operator : \'=\'\n                           | ADDASSIGN\n                           | SUBASSIGN\n                           | MULASSIGN\n                           | DIVASSIGN matrix : \'[\' vectors \']\' vector : \'[\' variables \']\' vectors : vectors \',\' vector\n                | vector matrix_function : function_name \'(\' INTNUM \')\' function_name : EYE\n                     | ONES\n                     | ZEROS var : ID number : INTNUM\n              | FLOATNUM string : STRING variable : number\n                 | var\n                 | element  vector_element : ID "[" INTNUM "]"  matrix_element : ID "[" INTNUM "," INTNUM "]"  element : vector_element\n               | matrix_elementvariables : variables \',\' variable\n                 | variable expression : number\n                  | var\n                  | matrix\n                  | matrix_function\n                  | uminus\n                  | transposition\n                  | matrix_element\n                  | vector_element expression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMUL expression\n                  | expression DOTDIV expression condition : expression EQ expression\n                 | expression NE expression\n                 | expression LE expression\n                 | expression GE expression\n                 | expression LT expression\n                 | expression GT expression uminus : \'-\' expression %prec UMINUS transposition : expression "\'" print_values : print_values \',\' string\n                    | print_values \',\' expression\n                    | string\n                    | expression '
    
_lr_action_items = {'$end':([0,1,2,3,4,19,20,21,57,113,121,133,134,],[-3,0,-1,-2,-5,-4,-6,-7,-8,-13,-16,-14,-15,]),'{':([0,3,4,7,18,19,20,21,22,34,35,36,37,38,39,40,41,43,44,57,71,72,81,89,90,91,92,93,94,95,96,97,106,112,113,121,126,128,129,132,133,134,],[7,7,-5,7,-33,-4,-6,-7,7,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,-8,-69,-68,7,7,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-13,-16,-29,7,7,-41,-14,-15,]),'IF':([0,3,4,7,18,19,20,21,22,34,35,36,37,38,39,40,41,43,44,57,71,72,81,89,90,91,92,93,94,95,96,97,106,112,113,121,126,128,129,132,133,134,],[8,8,-5,8,-33,-4,-6,-7,8,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,-8,-69,-68,8,8,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-13,-16,-29,8,8,-41,-14,-15,]),'FOR':([0,3,4,7,18,19,20,21,22,34,35,36,37,38,39,40,41,43,44,57,71,72,81,89,90,91,92,93,94,95,96,97,106,112,113,121,126,128,129,132,133,134,],[9,9,-5,9,-33,-4,-6,-7,9,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,-8,-69,-68,9,9,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-13,-16,-29,9,9,-41,-14,-15,]),'WHILE':([0,3,4,7,18,19,20,21,22,34,35,36,37,38,39,40,41,43,44,57,71,72,81,89,90,91,92,93,94,95,96,97,106,112,113,121,126,128,129,132,133,134,],[11,11,-5,11,-33,-4,-6,-7,11,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,-8,-69,-68,11,11,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-13,-16,-29,11,11,-41,-14,-15,]),'RETURN':([0,3,4,7,18,19,20,21,22,34,35,36,37,38,39,40,41,43,44,57,71,72,81,89,90,91,92,93,94,95,96,97,106,112,113,121,126,128,129,132,133,134,],[12,12,-5,12,-33,-4,-6,-7,12,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,-8,-69,-68,12,12,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-13,-16,-29,12,12,-41,-14,-15,]),'BREAK':([0,3,4,7,18,19,20,21,22,34,35,36,37,38,39,40,41,43,44,57,71,72,81,89,90,91,92,93,94,95,96,97,106,112,113,121,126,128,129,132,133,134,],[13,13,-5,13,-33,-4,-6,-7,13,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,-8,-69,-68,13,13,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-13,-16,-29,13,13,-41,-14,-15,]),'CONTINUE':([0,3,4,7,18,19,20,21,22,34,35,36,37,38,39,40,41,43,44,57,71,72,81,89,90,91,92,93,94,95,96,97,106,112,113,121,126,128,129,132,133,134,],[14,14,-5,14,-33,-4,-6,-7,14,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,-8,-69,-68,14,14,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-13,-16,-29,14,14,-41,-14,-15,]),'PRINT':([0,3,4,7,18,19,20,21,22,34,35,36,37,38,39,40,41,43,44,57,71,72,81,89,90,91,92,93,94,95,96,97,106,112,113,121,126,128,129,132,133,134,],[15,15,-5,15,-33,-4,-6,-7,15,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,-8,-69,-68,15,15,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-13,-16,-29,15,15,-41,-14,-15,]),'ID':([0,3,4,7,9,12,15,18,19,20,21,22,23,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,54,55,57,60,63,64,65,66,67,68,69,70,71,72,73,77,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,106,112,113,120,121,123,126,128,129,132,133,134,],[18,18,-5,18,25,18,18,-33,-4,-6,-7,18,18,18,-20,-21,-22,-23,-24,18,-46,-47,-48,-49,-50,-51,-52,-53,18,-34,-35,18,18,-8,18,18,18,18,18,18,18,18,18,-69,-68,103,18,18,18,18,18,18,18,18,18,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-13,18,-16,103,-29,18,18,-41,-14,-15,]),'}':([4,19,20,21,22,57,113,121,133,134,],[-5,-4,-6,-7,57,-8,-13,-16,-14,-15,]),';':([5,6,13,14,18,33,34,35,36,37,38,39,40,41,43,44,50,51,52,53,61,71,72,78,79,90,91,92,93,94,95,96,97,106,109,110,112,126,132,],[20,21,-10,-11,-33,-9,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,-12,-72,-73,-36,-17,-69,-68,-18,-19,-54,-55,-56,-57,-58,-59,-60,-61,-25,-70,-71,-40,-29,-41,]),'(':([8,11,46,47,48,49,],[23,32,76,-30,-31,-32,]),'=':([10,16,17,18,24,25,112,132,],[27,27,27,-33,60,-33,-40,-41,]),'ADDASSIGN':([10,16,17,18,112,132,],[28,28,28,-33,-40,-41,]),'SUBASSIGN':([10,16,17,18,112,132,],[29,29,29,-33,-40,-41,]),'MULASSIGN':([10,16,17,18,112,132,],[30,30,30,-33,-40,-41,]),'DIVASSIGN':([10,16,17,18,112,132,],[31,31,31,-33,-40,-41,]),'INTNUM':([12,15,23,26,27,28,29,30,31,32,42,54,55,56,60,63,64,65,66,67,68,69,70,73,76,77,82,83,84,85,86,87,111,120,123,124,],[43,43,43,43,-20,-21,-22,-23,-24,43,43,43,43,80,43,43,43,43,43,43,43,43,43,43,108,43,43,43,43,43,43,43,127,43,43,131,]),'FLOATNUM':([12,15,23,26,27,28,29,30,31,32,42,54,55,60,63,64,65,66,67,68,69,70,73,77,82,83,84,85,86,87,120,123,],[44,44,44,44,-20,-21,-22,-23,-24,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'[':([12,15,18,23,26,27,28,29,30,31,32,42,45,54,55,60,63,64,65,66,67,68,69,70,77,82,83,84,85,86,87,103,107,120,],[45,45,56,45,45,-20,-21,-22,-23,-24,45,45,73,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,124,73,45,]),'-':([12,15,18,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,52,54,55,59,60,61,63,64,65,66,67,68,69,70,71,72,77,78,79,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,106,110,112,114,115,116,117,118,119,120,126,129,132,],[42,42,-33,42,42,-20,-21,-22,-23,-24,42,64,-46,-47,-48,-49,-50,-51,-52,-53,42,-34,-35,64,42,42,64,42,64,42,42,42,42,42,42,42,42,-69,-68,42,64,64,42,42,42,42,42,42,64,-54,-55,-56,-57,-58,-59,-60,-61,-25,64,-40,64,64,64,64,64,64,42,-29,64,-41,]),'EYE':([12,15,23,26,27,28,29,30,31,32,42,54,55,60,63,64,65,66,67,68,69,70,77,82,83,84,85,86,87,120,],[47,47,47,47,-20,-21,-22,-23,-24,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'ONES':([12,15,23,26,27,28,29,30,31,32,42,54,55,60,63,64,65,66,67,68,69,70,77,82,83,84,85,86,87,120,],[48,48,48,48,-20,-21,-22,-23,-24,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'ZEROS':([12,15,23,26,27,28,29,30,31,32,42,54,55,60,63,64,65,66,67,68,69,70,77,82,83,84,85,86,87,120,],[49,49,49,49,-20,-21,-22,-23,-24,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'STRING':([15,77,],[53,53,]),'+':([18,33,34,35,36,37,38,39,40,41,43,44,52,59,61,71,72,78,79,88,90,91,92,93,94,95,96,97,106,110,112,114,115,116,117,118,119,126,129,132,],[-33,63,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,63,63,63,-69,-68,63,63,63,-54,-55,-56,-57,-58,-59,-60,-61,-25,63,-40,63,63,63,63,63,63,-29,63,-41,]),'*':([18,33,34,35,36,37,38,39,40,41,43,44,52,59,61,71,72,78,79,88,90,91,92,93,94,95,96,97,106,110,112,114,115,116,117,118,119,126,129,132,],[-33,65,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,65,65,65,-69,-68,65,65,65,65,65,-56,-57,65,65,-60,-61,-25,65,-40,65,65,65,65,65,65,-29,65,-41,]),'/':([18,33,34,35,36,37,38,39,40,41,43,44,52,59,61,71,72,78,79,88,90,91,92,93,94,95,96,97,106,110,112,114,115,116,117,118,119,126,129,132,],[-33,66,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,66,66,66,-69,-68,66,66,66,66,66,-56,-57,66,66,-60,-61,-25,66,-40,66,66,66,66,66,66,-29,66,-41,]),'DOTADD':([18,33,34,35,36,37,38,39,40,41,43,44,52,59,61,71,72,78,79,88,90,91,92,93,94,95,96,97,106,110,112,114,115,116,117,118,119,126,129,132,],[-33,67,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,67,67,67,-69,-68,67,67,67,67,67,-56,-57,-58,-59,-60,-61,-25,67,-40,67,67,67,67,67,67,-29,67,-41,]),'DOTSUB':([18,33,34,35,36,37,38,39,40,41,43,44,52,59,61,71,72,78,79,88,90,91,92,93,94,95,96,97,106,110,112,114,115,116,117,118,119,126,129,132,],[-33,68,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,68,68,68,-69,-68,68,68,68,68,68,-56,-57,-58,-59,-60,-61,-25,68,-40,68,68,68,68,68,68,-29,68,-41,]),'DOTMUL':([18,33,34,35,36,37,38,39,40,41,43,44,52,59,61,71,72,78,79,88,90,91,92,93,94,95,96,97,106,110,112,114,115,116,117,118,119,126,129,132,],[-33,69,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,69,69,69,-69,-68,69,69,69,69,69,69,69,69,69,-60,-61,-25,69,-40,69,69,69,69,69,69,-29,69,-41,]),'DOTDIV':([18,33,34,35,36,37,38,39,40,41,43,44,52,59,61,71,72,78,79,88,90,91,92,93,94,95,96,97,106,110,112,114,115,116,117,118,119,126,129,132,],[-33,70,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,70,70,70,-69,-68,70,70,70,70,70,70,70,70,70,-60,-61,-25,70,-40,70,70,70,70,70,70,-29,70,-41,]),"'":([18,33,34,35,36,37,38,39,40,41,43,44,52,59,61,71,72,78,79,88,90,91,92,93,94,95,96,97,106,110,112,114,115,116,117,118,119,126,129,132,],[-33,71,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,71,71,71,-69,71,71,71,71,71,71,71,71,71,71,71,71,-25,71,-40,71,71,71,71,71,71,-29,71,-41,]),',':([18,34,35,36,37,38,39,40,41,43,44,50,51,52,53,71,72,74,75,80,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,112,122,125,126,130,131,132,],[-33,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,77,-72,-73,-36,-69,-68,107,-28,111,-54,-55,-56,-57,-58,-59,-60,-61,123,-45,-37,-38,-39,-33,-42,-43,-25,-70,-71,-40,-26,-27,-29,-44,111,-41,]),'EQ':([18,34,35,36,37,38,39,40,41,43,44,59,71,72,90,91,92,93,94,95,96,97,106,112,126,132,],[-33,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,82,-69,-68,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-29,-41,]),'NE':([18,34,35,36,37,38,39,40,41,43,44,59,71,72,90,91,92,93,94,95,96,97,106,112,126,132,],[-33,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,83,-69,-68,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-29,-41,]),'LE':([18,34,35,36,37,38,39,40,41,43,44,59,71,72,90,91,92,93,94,95,96,97,106,112,126,132,],[-33,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,84,-69,-68,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-29,-41,]),'GE':([18,34,35,36,37,38,39,40,41,43,44,59,71,72,90,91,92,93,94,95,96,97,106,112,126,132,],[-33,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,85,-69,-68,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-29,-41,]),'LT':([18,34,35,36,37,38,39,40,41,43,44,59,71,72,90,91,92,93,94,95,96,97,106,112,126,132,],[-33,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,86,-69,-68,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-29,-41,]),'GT':([18,34,35,36,37,38,39,40,41,43,44,59,71,72,90,91,92,93,94,95,96,97,106,112,126,132,],[-33,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,87,-69,-68,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-29,-41,]),':':([18,34,35,36,37,38,39,40,41,43,44,71,72,88,90,91,92,93,94,95,96,97,106,112,126,132,],[-33,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,-69,-68,120,-54,-55,-56,-57,-58,-59,-60,-61,-25,-40,-29,-41,]),')':([18,34,35,36,37,38,39,40,41,43,44,58,62,71,72,90,91,92,93,94,95,96,97,106,108,112,114,115,116,117,118,119,126,132,],[-33,-46,-47,-48,-49,-50,-51,-52,-53,-34,-35,81,89,-69,-68,-54,-55,-56,-57,-58,-59,-60,-61,-25,126,-40,-62,-63,-64,-65,-66,-67,-29,-41,]),'ELSE':([20,21,57,113,121,133,134,],[-6,-7,-8,128,-16,-14,-15,]),']':([43,44,74,75,80,98,99,100,101,102,103,104,105,112,122,125,127,130,131,132,],[-34,-35,106,-28,112,122,-45,-37,-38,-39,-33,-42,-43,-40,-26,-27,132,-44,112,-41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,7,],[3,22,]),'instruction':([0,3,7,22,81,89,128,129,],[4,19,4,19,113,121,133,134,]),'sys_instruction':([0,3,7,22,81,89,128,129,],[5,5,5,5,5,5,5,5,]),'assignment':([0,3,7,22,81,89,128,129,],[6,6,6,6,6,6,6,6,]),'var':([0,3,7,9,12,15,22,23,26,32,42,54,55,60,63,64,65,66,67,68,69,70,73,77,81,82,83,84,85,86,87,89,120,123,128,129,],[10,10,10,24,35,35,10,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,101,35,10,35,35,35,35,35,35,10,35,101,10,10,]),'matrix_element':([0,3,7,12,15,22,23,26,32,42,54,55,60,63,64,65,66,67,68,69,70,73,77,81,82,83,84,85,86,87,89,120,123,128,129,],[16,16,16,40,40,16,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,105,40,16,40,40,40,40,40,40,16,40,105,16,16,]),'vector_element':([0,3,7,12,15,22,23,26,32,42,54,55,60,63,64,65,66,67,68,69,70,73,77,81,82,83,84,85,86,87,89,120,123,128,129,],[17,17,17,41,41,17,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,104,41,17,41,41,41,41,41,41,17,41,104,17,17,]),'assignment_operator':([10,16,17,],[26,54,55,]),'expression':([12,15,23,26,32,42,54,55,60,63,64,65,66,67,68,69,70,77,82,83,84,85,86,87,120,],[33,52,59,61,59,72,78,79,88,90,91,92,93,94,95,96,97,110,114,115,116,117,118,119,129,]),'number':([12,15,23,26,32,42,54,55,60,63,64,65,66,67,68,69,70,73,77,82,83,84,85,86,87,120,123,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,100,34,34,34,34,34,34,34,34,100,]),'matrix':([12,15,23,26,32,42,54,55,60,63,64,65,66,67,68,69,70,77,82,83,84,85,86,87,120,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'matrix_function':([12,15,23,26,32,42,54,55,60,63,64,65,66,67,68,69,70,77,82,83,84,85,86,87,120,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'uminus':([12,15,23,26,32,42,54,55,60,63,64,65,66,67,68,69,70,77,82,83,84,85,86,87,120,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'transposition':([12,15,23,26,32,42,54,55,60,63,64,65,66,67,68,69,70,77,82,83,84,85,86,87,120,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'function_name':([12,15,23,26,32,42,54,55,60,63,64,65,66,67,68,69,70,77,82,83,84,85,86,87,120,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'print_values':([15,],[50,]),'string':([15,77,],[51,109,]),'condition':([23,32,],[58,62,]),'vectors':([45,],[74,]),'vector':([45,107,],[75,125,]),'variables':([73,],[98,]),'variable':([73,123,],[99,130,]),'element':([73,123,],[102,102,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',27),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',30),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',33),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',36),
  ('instructions -> instruction','instructions',1,'p_instructions_2','Mparser.py',39),
  ('instruction -> sys_instruction ;','instruction',2,'p_instruction','Mparser.py',44),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',45),
  ('instruction -> { instructions }','instruction',3,'p_instruction','Mparser.py',46),
  ('sys_instruction -> RETURN expression','sys_instruction',2,'p_sys_instruction_return','Mparser.py',50),
  ('sys_instruction -> BREAK','sys_instruction',1,'p_sys_instruction_break','Mparser.py',54),
  ('sys_instruction -> CONTINUE','sys_instruction',1,'p_sys_instruction_continue','Mparser.py',58),
  ('sys_instruction -> PRINT print_values','sys_instruction',2,'p_sys_instruction_print','Mparser.py',62),
  ('instruction -> IF ( condition ) instruction','instruction',5,'p_instruction_if','Mparser.py',66),
  ('instruction -> IF ( condition ) instruction ELSE instruction','instruction',7,'p_instruction_if_else','Mparser.py',70),
  ('instruction -> FOR var = expression : expression instruction','instruction',7,'p_instruction_for','Mparser.py',74),
  ('instruction -> WHILE ( condition ) instruction','instruction',5,'p_instruction_while','Mparser.py',78),
  ('assignment -> var assignment_operator expression','assignment',3,'p_assignment','Mparser.py',82),
  ('assignment -> matrix_element assignment_operator expression','assignment',3,'p_assignment','Mparser.py',83),
  ('assignment -> vector_element assignment_operator expression','assignment',3,'p_assignment','Mparser.py',84),
  ('assignment_operator -> =','assignment_operator',1,'p_assignment_operator','Mparser.py',88),
  ('assignment_operator -> ADDASSIGN','assignment_operator',1,'p_assignment_operator','Mparser.py',89),
  ('assignment_operator -> SUBASSIGN','assignment_operator',1,'p_assignment_operator','Mparser.py',90),
  ('assignment_operator -> MULASSIGN','assignment_operator',1,'p_assignment_operator','Mparser.py',91),
  ('assignment_operator -> DIVASSIGN','assignment_operator',1,'p_assignment_operator','Mparser.py',92),
  ('matrix -> [ vectors ]','matrix',3,'p_matrix','Mparser.py',96),
  ('vector -> [ variables ]','vector',3,'p_vector','Mparser.py',100),
  ('vectors -> vectors , vector','vectors',3,'p_vectors','Mparser.py',104),
  ('vectors -> vector','vectors',1,'p_vectors','Mparser.py',105),
  ('matrix_function -> function_name ( INTNUM )','matrix_function',4,'p_matrix_function','Mparser.py',109),
  ('function_name -> EYE','function_name',1,'p_function_name','Mparser.py',113),
  ('function_name -> ONES','function_name',1,'p_function_name','Mparser.py',114),
  ('function_name -> ZEROS','function_name',1,'p_function_name','Mparser.py',115),
  ('var -> ID','var',1,'p_var','Mparser.py',119),
  ('number -> INTNUM','number',1,'p_number','Mparser.py',123),
  ('number -> FLOATNUM','number',1,'p_number','Mparser.py',124),
  ('string -> STRING','string',1,'p_string','Mparser.py',128),
  ('variable -> number','variable',1,'p_variable','Mparser.py',132),
  ('variable -> var','variable',1,'p_variable','Mparser.py',133),
  ('variable -> element','variable',1,'p_variable','Mparser.py',134),
  ('vector_element -> ID [ INTNUM ]','vector_element',4,'p_vector_element','Mparser.py',138),
  ('matrix_element -> ID [ INTNUM , INTNUM ]','matrix_element',6,'p_matrix_element','Mparser.py',142),
  ('element -> vector_element','element',1,'p_element','Mparser.py',146),
  ('element -> matrix_element','element',1,'p_element','Mparser.py',147),
  ('variables -> variables , variable','variables',3,'p_variables','Mparser.py',151),
  ('variables -> variable','variables',1,'p_variables','Mparser.py',152),
  ('expression -> number','expression',1,'p_expression','Mparser.py',156),
  ('expression -> var','expression',1,'p_expression','Mparser.py',157),
  ('expression -> matrix','expression',1,'p_expression','Mparser.py',158),
  ('expression -> matrix_function','expression',1,'p_expression','Mparser.py',159),
  ('expression -> uminus','expression',1,'p_expression','Mparser.py',160),
  ('expression -> transposition','expression',1,'p_expression','Mparser.py',161),
  ('expression -> matrix_element','expression',1,'p_expression','Mparser.py',162),
  ('expression -> vector_element','expression',1,'p_expression','Mparser.py',163),
  ('expression -> expression + expression','expression',3,'p_bin_expression','Mparser.py',167),
  ('expression -> expression - expression','expression',3,'p_bin_expression','Mparser.py',168),
  ('expression -> expression * expression','expression',3,'p_bin_expression','Mparser.py',169),
  ('expression -> expression / expression','expression',3,'p_bin_expression','Mparser.py',170),
  ('expression -> expression DOTADD expression','expression',3,'p_bin_expression','Mparser.py',171),
  ('expression -> expression DOTSUB expression','expression',3,'p_bin_expression','Mparser.py',172),
  ('expression -> expression DOTMUL expression','expression',3,'p_bin_expression','Mparser.py',173),
  ('expression -> expression DOTDIV expression','expression',3,'p_bin_expression','Mparser.py',174),
  ('condition -> expression EQ expression','condition',3,'p_condition','Mparser.py',178),
  ('condition -> expression NE expression','condition',3,'p_condition','Mparser.py',179),
  ('condition -> expression LE expression','condition',3,'p_condition','Mparser.py',180),
  ('condition -> expression GE expression','condition',3,'p_condition','Mparser.py',181),
  ('condition -> expression LT expression','condition',3,'p_condition','Mparser.py',182),
  ('condition -> expression GT expression','condition',3,'p_condition','Mparser.py',183),
  ('uminus -> - expression','uminus',2,'p_uminus','Mparser.py',187),
  ("transposition -> expression '",'transposition',2,'p_transposition','Mparser.py',191),
  ('print_values -> print_values , string','print_values',3,'p_print_values','Mparser.py',195),
  ('print_values -> print_values , expression','print_values',3,'p_print_values','Mparser.py',196),
  ('print_values -> string','print_values',1,'p_print_values','Mparser.py',197),
  ('print_values -> expression','print_values',1,'p_print_values','Mparser.py',198),
]
